module.exports = {
    intro1:"Start – indicates where a particular Process will start. 2. Intermediate – occur between the start and end events and affect the flow of the process. 3. End – indicates where the process ends. These are pretty simply. The important thing to remember is that there are variants. For example, if you add the picture of an envelop to any of these three events, you would have a message event. You could start a process by the arrival of a message, send a message (or catch a message) with an intermediate event somewhere in the middle of the process, or you could send a message at the end of a process. ",
    intro2:"A) Activities: An Activity is a generic term for work that an actor performs in a Process. What many people do not realize is that an Activity can be atomic or non-atomic (compound). In other words, an Activity can be a Task or it can be a Sub-process (a process within the main process). The fun part of activities is that you can also specify various types of activities. For example, tasks can be manual tasks, human tasks, message tasks (have the same function as a message event) script tasks, or service tasks (indicating, perhaps, that work is performed by a web service. ",
    intro3:"Gateways Events and Activities are pretty easy to understand. The real magic in a process, though, happens at the gateways. Gateways can tell a process to continue exclusively down one path vs. another or instruct participants in the process to begin working in parallel. In still other scenarios, there could be multiple pathways in which some of the pathways only become active under certain circumstances. There are some pretty funky gateways out there. My personal favorite is the Eventbased gateway (also known as a Race Gateway) which basically creates a race between two alternative paths. For example, a company might have a cancelation policy where a customer can cancel an emitted insurance policy within 1 week; otherwise, it will print and mail the policy. In this case, either we get the cancelation within a week or we go down the path of emitting the policy. Wow – that is elegant. ",
    intro4:"Don’t worry if you think the Event-based gateway is difficult; it is. It is also not so common. Here are the 3 you should know: • Exclusive - This Decision represents a branching point where Alternatives are based on conditional Expressions contained within the outgoing Sequence Flows. Only one of the Alternatives will be chosen. • Parallel (Fork) - BPMN uses the term “fork” to refer to the dividing of a path into two or more parallel paths (also known as an ANDSplit). It is a place in the Process where activities can be performed concurrently, rather than sequentially. • Inclusive - This Decision represents a branching point where Alternatives are based on conditional Expressions contained within the outgoing Sequence Flows. In some sense it is a grouping of related independent Binary (Yes/No) Decisions. Since each path is independent, all combinations of the paths MAY be taken, from zero to all. However, it should be designed so that at least one path is taken. A Default Condition could be used to ensure that at least one path is taken. ",
}